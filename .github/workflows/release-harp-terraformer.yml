name: Release (Harp Terraformer)

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        required: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
          # normal
          - golang-image: "golang"
            golang-version: "1.17"
            tools-image: ghcr.io/elastic/harp/harp-tools:latest
            harp-image: harp-terraformer
          # fips
          - golang-image: "goboring/golang"
            golang-version: "1.16.7b7"
            tools-image: ghcr.io/elastic/harp/harp-tools-fips:latest
            harp-image: harp-terraformer-fips
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          egress-policy: audit

      - name: Harden Runner
        uses: step-security/harden-runner@128a63446a954579617e875aaab7d2978154e969 # v2.4.0
        with:
          egress-policy: audit

      -
        name: Check out the repo
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: 1.17
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f211e3e9ded2d9377c8cadc4489a4e38014bc4c9 # v1.7.0
        with:
          install: true
      - name: Cache Docker layers
        uses: actions/cache@8492260343ad570701412c2f464a5877dc76bace # v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-terraformer-${{ matrix.golang-version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx-terraformer-${{ matrix.golang-version }}-${{ github.sha }}
            ${{ runner.os }}-multi-buildx-terraformer-${{ matrix.golang-version }}
            ${{ runner.os }}-multi-buildx-terraformer
      -
        name: Set Dockerfile settings
        run: |
          echo Building $DOCKER_IMAGE_NAME with $GOLANG_IMAGE:$GOLANG_VERSION
          echo "DOCKERFILE_ONLY=1" >> $GITHUB_ENV
          echo "GOLANG_IMAGE=$GOLANG_IMAGE" >> $GITHUB_ENV
          echo "GOLANG_VERSION=$GOLANG_VERSION" >> $GITHUB_ENV
          echo "TOOL_IMAGE_NAME=$TOOL_IMAGE_NAME" >> $GITHUB_ENV
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
        env:
          DOCKERFILE_ONLY: 1
          GOLANG_IMAGE: ${{ matrix.golang-image }}
          GOLANG_VERSION: ${{ matrix.golang-version }}
          TOOL_IMAGE_NAME: ${{ matrix.tools-image }}
          RELEASE: ${{ github.event.inputs.release }}
      -
        name: Generate Dockerfile
        uses: magefile/mage-action@0a2bfd2ca891da3552ae39be755aecdce60ed1bc # v1.7.0
        with:
          version: latest
          args: releaser:terraformer
      -
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # v2.10.0
        with:
          context: .
          file: Dockerfile.release
          pull: false
          push: true
          tags: |
            ghcr.io/elastic/harp-plugins/${{ matrix.harp-image }}:v${{ github.event.inputs.release }}
            ghcr.io/elastic/harp-plugins/${{ matrix.harp-image }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            GOLANG_IMAGE=${{ matrix.golang-image }}
            GOLANG_VERSION=${{ matrix.golang-version }}
            RELEASE=${{ github.event.inputs.release }}
      -
        name: Create SBOM
        uses: anchore/sbom-action@4d571ad1038a9cc29d676154ef265ab8f9027042 # v0.14.2
        with:
          image: ghcr.io/elastic/harp-plugins/${{ matrix.harp-image }}:v${{ github.event.inputs.release }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ github.token }}
          artifact-name: sbom.spdx
          format: spdx
      -
        uses: sigstore/cosign-installer@1a22e17968bb5f9192b82a39d3ffb322627f5169 # main
      -
        name: Sign image and add attestations
        run: |
          echo -n "${COSIGN_PASSWORD}" | \
          cosign sign --key <(echo -n "${COSIGN_KEY}") \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "ref=${{ github.sha }}" \
            ghcr.io/elastic/harp-plugins/${{ matrix.harp-image }}:v${{ github.event.inputs.release }}
          cosign attach sbom --sbom sbom.spdx ghcr.io/elastic/harp-plugins/${{ matrix.harp-image }}:v${{ github.event.inputs.release }}
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: write
    steps:
      -
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Extract artifacts from the docker image
        id: extract-std
        uses: shrink/actions-docker-extract@7d86f1b9adc7afe4a64e13fb425872a547d6afa3 # v1.0.3
        with:
          image: ghcr.io/elastic/harp-plugins/harp-terraformer:v${{ github.event.inputs.release }}
          path: '/app/.'
      -
        name: Extract FIPS artifacts from the docker image
        id: extract-fips
        uses: shrink/actions-docker-extract@7d86f1b9adc7afe4a64e13fb425872a547d6afa3 # v1.0.3
        with:
          image: ghcr.io/elastic/harp-plugins/harp-terraformer-fips:v${{ github.event.inputs.release }}
          path: '/app/.'
      -
        name: Assemble a package
        run: |
          mkdir .dist
          cp ${{ steps.extract-std.outputs.destination }}/* .dist/
          cp ${{ steps.extract-fips.outputs.destination }}/* .dist/
          cd .dist
          find . -maxdepth 1 -mindepth 1 -type f -exec tar czvf {}.tar.gz {} --remove-files \;
      -
        name: Create checksum
        id: create-checksum
        run: |
          cd .dist
          sha512sum * > checksum.txt
      -
        uses: sigstore/cosign-installer@1a22e17968bb5f9192b82a39d3ffb322627f5169 # main
      -
        name: Sign the checksum
        run: |
          cd .dist
          echo -n "${COSIGN_PASSWORD}" | \
            cosign sign-blob --key <(echo -n "${COSIGN_KEY}") \
              --output-signature=checksum.txt.sig \
              checksum.txt
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      -
        name: Upload to release
        uses: AButler/upload-release-assets@ec6d3263266dc57eb6645b5f75e827987f7c217d # v2.0
        with:
          files: '.dist/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: cmd/harp-terraformer/v${{ github.event.inputs.release }}
